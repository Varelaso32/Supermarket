<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="MainMenu.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAOwAAADsAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiH6Fb4d+hfCHfoXKhXqFFwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAId9hWaHfoXuh36EzoR7hB0AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgAyHfoX8h36F/4d+
        hf+HfoV/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACZZpkFh36F94d+hf+HfoX/h36FigAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgICABIZ+
        he2HfoX/h36F/4d9hGwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8A/wGHfoXjh36F/4d+
        hf+HfoV5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/sxoK6aUwoe+nKuLrpi3R86ooPwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/7YkB+ml
        L5nvqCrh7KYs1e6pKUoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAParI5H3qyP/96sj//erI//3qyPz9acnGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD3rCOE96sj//erI//3qyP/96sj9/itJiIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAPq7ZDj8umVg+rNFyPmwPP35sT3/+bE9//mxPvH7tVSJ/blkZv25ZGb9uWRm/blkZv25
        ZGb9uWRm/blkZvuzRrv6sUDs+bE9//mxPfv5sT/h+bA5qvqvN10AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP+0aRH8uWTB/Llk//y5ZP/8uWT//Llk//y5ZP/8uWT//Llk//y5ZP/8uWT//Llk//y5
        ZP/8uWT//Llk//y5ZP/8uWT//Llk//y5ZP/8uWT//Llk//y5ZP/6skL/96sj/v+zGgoAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/Lhjn/y5ZP/9uWTP/bpkff24ZXf9uGV3/bhld/24ZXf9uGV3/bhld/24
        ZXf9uGV3/bhld/24ZXf9uGV3/bhld/24ZXf9uGV3/bhld/24ZXf9uGV3/bhievmwPKH2rjRxAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+AgAL8uWT0/Llk9P+2Ww4AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/4CAAvy5ZPj8uWXx/8ZxCQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/Llkrvy5ZP/8uWW+/bpka/25
        ZGb9uWRm/blkZv25ZGb9uWRm/blkZv25ZGb9uWRm/blkZv25ZGb9uWRm+bFDiveuN37/gAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/umIa+7lk1vy5
        ZP/8uWT//Llk//y5ZP/8uWT//Llk//y5ZP/8uWT//Llk//y5ZP/8uWT//Llk//y5ZP/6tE3/96sj//er
        Lj0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/tm0H/LplUf25Y3T4sUjb861N/7SIsv+2jLb/upK1/7qStf+6krX/upK1/7qStf+6krX/u5Kz/8iX
        i//MmH7QgHL4iYBx+4iAb/uKdmP9qHNf/6dtW/84AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA+KojJPerI//enEz/blr//31s/P+AcPz/gHD8/4Bw/P+AcPz/gHD8/4Bw
        /P+AcPz/gHD8/4Bw/P+AcPz/gHD8/4Bw/P99bfz/blr//29b//RgYP8IAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD2qyN096sj/7KCkf9xXf//gHD8/4Bw/P+AcPz/gHD8/4Bw
        /P+AcPz/gHD8/4Bw/P+AcPz/gHD8/4Bw/P+AcPz/gHD8/4Bw/P9yXv7/blr//2xb/0kAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPeqI8T3qyP/iGnW/3dk/v+AcPz/gHD8/4Bw
        /P+Zivb/wrPs/8Kz7P/Cs+z/wrPs/8Kz7P+Tgvf/gHD8/4Bw/P+AcPz/gHD8/3dm/f9uWv//cFz/pAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADzriMW9qok/eWfPf9rSu3/bln7/3Bd
        //9wXf//cF3//62d8f/87t7//O7e//zu3v/87t7//O7e/56M9P9wXf//cF3//3Bd//9wXf//b1r8/2tK
        7f9qS+33AAD/AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPesI2X3qyP/uoeF/29b
        /v9+b/z/fm/8/35v/P9+b/z/tafv//zu3v/87t7//O7e//zu3v/87t7/p5jy/35v/P9+b/z/fm/8/35v
        /P9+b/z/cFz+/25Z/v9tWv82AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA96ojtfer
        I/+Pbsr/dWP+/4Bw/P+AcPz/gHD8/4Bw/P+5qe3//Oza//zs2v/87t3//O7e//zu3v+omfL/gHD8/4Bw
        /P+AcPz/gHD8/4Bw/P92ZP7/blr//3Ba/5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+q
        Kwz3qyP37aU0/3Bc/P97av3/gHD8/4Bw/P+AcPz/gHD8/8Cq4f//4sT//+LE//3r1v/87t7//O7e/6iZ
        8v+AcPz/gHD8/4Bw/P+AcPz/gHD8/3tq/f9uWv//cFz/5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA9qwkVverI//Bh3L/a07x/3Ng/v9zYP7/c2D+/3Ng/v9zYP7/spvk///ixP//4sT//evW//zu
        3v/87t7/oI7z/3Ng/v9zYP7/c2D+/3Ng/v9zYP7/c2D+/2xN8f9sTfD9aUvpIgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD3qyOm96sj/5dwuv9yXPv/fGz9/3xs/f98bP3/fGz9/3xs/f+9q+f//ujR//7o
        0f/87dr//O7e//zu3v+mlvP/fGz9/3xs/f98bP3/fGz9/3xs/f98bP3/cVz7/21W+/9yWP19AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/5kzBfarI+/xqCz+c133/3po/f+AcPz/gHD8/4Bw/P+AcPz/gHD8/7an
        7//87t7//O7e//zu3v/87t7//O7e/6iZ8v+AcPz/gHD8/4Bw/P+AcPz/gHD8/4Bw/P96aP3/blr//3Fd
        /tcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4qiNI96sj/8qRa/9vW///f2/8/4Bw/P+AcPz/gHD8/4Bw
        /P+AcPz/tqfv//zu3v/87t7//O7e//zu3v/87t7/qJny/4Bw/P+AcPz/gHD8/4Bw/P+AcPz/gHD8/39v
        /P9vW///bVr//mla/xEAAAAAAAAAAAAAAAAAAAAAAAAAAPerI5j3qyP/onmt9XNh/umBdfTogXXy64F1
        8uuBdfLrfXn6+nx7/P+spfH/6eDi/+rl4v/q6eL/6eXi/+nh4v+hnPT8fHv8/3t5/P97ePz/fXv8/n9/
        /P99fvz/e338/3Nk/vhvW/7zbVv/RgAAAAAAAAAAAAAAAAAAAAD/qgAD96sj5verI/rvryAQkMdhN5HG
        Yf+RxmH/kcZh/5HGYf9uw9f/Y8L//12x//9aqv//bs///3fg//9l1v//W9D//2HF/+Fjwv//XbT//1qq
        //9pyf/wd+D//2fX//9b0P//X9L/fgAAAAAAAAAA9a0iNferI/D3qyP/96sj//erI//3qyP/96skugAA
        AACStm0HmMxn05jNZ/+bzmz/otJ4/3PF3f9jwv//XbH//1qq//9uzv/sd+D//2XW//9b0P//Ysb/0mPC
        //9dtP//Wqr//2jG/9Z34P//Z9f//1vQ//9g0v99AAAAAAAAAAD5qCUp+Ksiz/erI933qyPd96sj3fer
        JNf4qiNIAAAAAJ/SbC2h1G79odRu/6rYff623pH/gszV/2PC//9dsf//Wqr//3DS/6Z34P//Zdb//1vQ
        //9ixf+iY8L//120//9aqv//bMz/oXfg//9n1///W9D//17Q/0wAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAotNtUqHUbvGh1G7/rNqD8bbekf+t253/csfs312z/+xesv+bet7/F3jg
        /7Nm1//sZNX/pF68/xNkwf+uXrX/612x/61w3/8Qd+D/qmnY/+pj0/+1AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoddrE6HUb4ix3Ynmtt6R/7bekf+23pHBAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALbekNq23pH/tt6R67ff
        kWYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtt6Rw7bd
        kYm73ZkPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8P+H/+D/B//g/wf/4P8H/+B/A/+AAAH+AAAA/gAAAfw////8P////gA
        Af/4AAH//AAAD/8AAAf/AAAH/wAAB/4AAAP+AAAD/gAAA/wAAAP8AAAB/AAAAfgAAAH4AAAA+AAAAPAA
        AAMBAAADAQAAA/8AAAf/gf///+H////j//8=
</value>
  </data>
</root>